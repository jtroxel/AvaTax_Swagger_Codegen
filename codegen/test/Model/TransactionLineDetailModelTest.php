<?php
/**
 * TransactionLineDetailModelTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Together\Taxes\Provider\AvaTax\Swagger
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AvaTax API
 *
 * REST interface to Avalara's enterprise tax service, AvaTax.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Together\Taxes\Provider\AvaTax\Swagger;

/**
 * TransactionLineDetailModelTest Class Doc Comment
 *
 * @category    Class
 * @description An individual tax detail element.  Represents the amount of tax calculated for a particular jurisdiction, for a particular line in an invoice.
 * @package     Together\Taxes\Provider\AvaTax\Swagger
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TransactionLineDetailModelTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "TransactionLineDetailModel"
     */
    public function testTransactionLineDetailModel()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "transaction_line_id"
     */
    public function testPropertyTransactionLineId()
    {
    }

    /**
     * Test attribute "transaction_id"
     */
    public function testPropertyTransactionId()
    {
    }

    /**
     * Test attribute "address_id"
     */
    public function testPropertyAddressId()
    {
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
    }

    /**
     * Test attribute "county_fips"
     */
    public function testPropertyCountyFips()
    {
    }

    /**
     * Test attribute "state_fips"
     */
    public function testPropertyStateFips()
    {
    }

    /**
     * Test attribute "exempt_amount"
     */
    public function testPropertyExemptAmount()
    {
    }

    /**
     * Test attribute "exempt_reason_id"
     */
    public function testPropertyExemptReasonId()
    {
    }

    /**
     * Test attribute "in_state"
     */
    public function testPropertyInState()
    {
    }

    /**
     * Test attribute "juris_code"
     */
    public function testPropertyJurisCode()
    {
    }

    /**
     * Test attribute "juris_name"
     */
    public function testPropertyJurisName()
    {
    }

    /**
     * Test attribute "jurisdiction_id"
     */
    public function testPropertyJurisdictionId()
    {
    }

    /**
     * Test attribute "signature_code"
     */
    public function testPropertySignatureCode()
    {
    }

    /**
     * Test attribute "state_assigned_no"
     */
    public function testPropertyStateAssignedNo()
    {
    }

    /**
     * Test attribute "juris_type"
     */
    public function testPropertyJurisType()
    {
    }

    /**
     * Test attribute "jurisdiction_type"
     */
    public function testPropertyJurisdictionType()
    {
    }

    /**
     * Test attribute "non_taxable_amount"
     */
    public function testPropertyNonTaxableAmount()
    {
    }

    /**
     * Test attribute "non_taxable_rule_id"
     */
    public function testPropertyNonTaxableRuleId()
    {
    }

    /**
     * Test attribute "non_taxable_type"
     */
    public function testPropertyNonTaxableType()
    {
    }

    /**
     * Test attribute "rate"
     */
    public function testPropertyRate()
    {
    }

    /**
     * Test attribute "rate_rule_id"
     */
    public function testPropertyRateRuleId()
    {
    }

    /**
     * Test attribute "rate_source_id"
     */
    public function testPropertyRateSourceId()
    {
    }

    /**
     * Test attribute "ser_code"
     */
    public function testPropertySerCode()
    {
    }

    /**
     * Test attribute "sourcing"
     */
    public function testPropertySourcing()
    {
    }

    /**
     * Test attribute "tax"
     */
    public function testPropertyTax()
    {
    }

    /**
     * Test attribute "taxable_amount"
     */
    public function testPropertyTaxableAmount()
    {
    }

    /**
     * Test attribute "tax_type"
     */
    public function testPropertyTaxType()
    {
    }

    /**
     * Test attribute "tax_sub_type_id"
     */
    public function testPropertyTaxSubTypeId()
    {
    }

    /**
     * Test attribute "tax_type_group_id"
     */
    public function testPropertyTaxTypeGroupId()
    {
    }

    /**
     * Test attribute "tax_name"
     */
    public function testPropertyTaxName()
    {
    }

    /**
     * Test attribute "tax_authority_type_id"
     */
    public function testPropertyTaxAuthorityTypeId()
    {
    }

    /**
     * Test attribute "tax_region_id"
     */
    public function testPropertyTaxRegionId()
    {
    }

    /**
     * Test attribute "tax_calculated"
     */
    public function testPropertyTaxCalculated()
    {
    }

    /**
     * Test attribute "tax_override"
     */
    public function testPropertyTaxOverride()
    {
    }

    /**
     * Test attribute "rate_type"
     */
    public function testPropertyRateType()
    {
    }

    /**
     * Test attribute "rate_type_code"
     */
    public function testPropertyRateTypeCode()
    {
    }

    /**
     * Test attribute "taxable_units"
     */
    public function testPropertyTaxableUnits()
    {
    }

    /**
     * Test attribute "non_taxable_units"
     */
    public function testPropertyNonTaxableUnits()
    {
    }

    /**
     * Test attribute "exempt_units"
     */
    public function testPropertyExemptUnits()
    {
    }

    /**
     * Test attribute "unit_of_basis"
     */
    public function testPropertyUnitOfBasis()
    {
    }

    /**
     * Test attribute "is_non_pass_thru"
     */
    public function testPropertyIsNonPassThru()
    {
    }

    /**
     * Test attribute "is_fee"
     */
    public function testPropertyIsFee()
    {
    }
}
