<?php
/**
 * TaxRuleModelTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Together\Taxes\Provider\AvaTax\Swagger
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AvaTax API
 *
 * REST interface to Avalara's enterprise tax service, AvaTax.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Together\Taxes\Provider\AvaTax\Swagger;

/**
 * TaxRuleModelTest Class Doc Comment
 *
 * @category    Class
 * @description Represents a tax rule that changes the behavior of Avalara&#39;s tax engine for certain products and/or entity use codes  in certain jurisdictions.                Avalara supports a few different types of tax rules.  For information about tax rule types, see  [TaxRuleTypeId](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/TaxRuleTypeId/)                Because different types of tax rules have different behavior, some fields may change their behavior based on  the type of tax rule selected.  Please read the documentation for each field carefully and ensure that  the value you send is appropriate for the type of tax rule.
 * @package     Together\Taxes\Provider\AvaTax\Swagger
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TaxRuleModelTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "TaxRuleModel"
     */
    public function testTaxRuleModel()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "company_id"
     */
    public function testPropertyCompanyId()
    {
    }

    /**
     * Test attribute "tax_code_id"
     */
    public function testPropertyTaxCodeId()
    {
    }

    /**
     * Test attribute "tax_code"
     */
    public function testPropertyTaxCode()
    {
    }

    /**
     * Test attribute "state_fips"
     */
    public function testPropertyStateFips()
    {
    }

    /**
     * Test attribute "juris_name"
     */
    public function testPropertyJurisName()
    {
    }

    /**
     * Test attribute "juris_code"
     */
    public function testPropertyJurisCode()
    {
    }

    /**
     * Test attribute "juris_type_id"
     */
    public function testPropertyJurisTypeId()
    {
    }

    /**
     * Test attribute "jurisdiction_type_id"
     */
    public function testPropertyJurisdictionTypeId()
    {
    }

    /**
     * Test attribute "customer_usage_type"
     */
    public function testPropertyCustomerUsageType()
    {
    }

    /**
     * Test attribute "entity_use_code"
     */
    public function testPropertyEntityUseCode()
    {
    }

    /**
     * Test attribute "tax_type_id"
     */
    public function testPropertyTaxTypeId()
    {
    }

    /**
     * Test attribute "rate_type_id"
     */
    public function testPropertyRateTypeId()
    {
    }

    /**
     * Test attribute "rate_type_code"
     */
    public function testPropertyRateTypeCode()
    {
    }

    /**
     * Test attribute "tax_rule_type_id"
     */
    public function testPropertyTaxRuleTypeId()
    {
    }

    /**
     * Test attribute "is_all_juris"
     */
    public function testPropertyIsAllJuris()
    {
    }

    /**
     * Test attribute "value"
     */
    public function testPropertyValue()
    {
    }

    /**
     * Test attribute "cap"
     */
    public function testPropertyCap()
    {
    }

    /**
     * Test attribute "threshold"
     */
    public function testPropertyThreshold()
    {
    }

    /**
     * Test attribute "options"
     */
    public function testPropertyOptions()
    {
    }

    /**
     * Test attribute "effective_date"
     */
    public function testPropertyEffectiveDate()
    {
    }

    /**
     * Test attribute "end_date"
     */
    public function testPropertyEndDate()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "county_fips"
     */
    public function testPropertyCountyFips()
    {
    }

    /**
     * Test attribute "is_st_pro"
     */
    public function testPropertyIsStPro()
    {
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
    }

    /**
     * Test attribute "sourcing"
     */
    public function testPropertySourcing()
    {
    }

    /**
     * Test attribute "tax_type_group"
     */
    public function testPropertyTaxTypeGroup()
    {
    }

    /**
     * Test attribute "tax_sub_type"
     */
    public function testPropertyTaxSubType()
    {
    }

    /**
     * Test attribute "non_passthrough_expression"
     */
    public function testPropertyNonPassthroughExpression()
    {
    }

    /**
     * Test attribute "currency_code"
     */
    public function testPropertyCurrencyCode()
    {
    }

    /**
     * Test attribute "preferred_program_id"
     */
    public function testPropertyPreferredProgramId()
    {
    }

    /**
     * Test attribute "uom_id"
     */
    public function testPropertyUomId()
    {
    }

    /**
     * Test attribute "created_date"
     */
    public function testPropertyCreatedDate()
    {
    }

    /**
     * Test attribute "created_user_id"
     */
    public function testPropertyCreatedUserId()
    {
    }

    /**
     * Test attribute "modified_date"
     */
    public function testPropertyModifiedDate()
    {
    }

    /**
     * Test attribute "modified_user_id"
     */
    public function testPropertyModifiedUserId()
    {
    }
}
