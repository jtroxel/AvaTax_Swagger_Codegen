<?php
/**
 * AuditModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AvaTax API
 *
 * REST interface to Avalara's enterprise tax service, AvaTax.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AuditModel Class Doc Comment
 *
 * @category Class
 * @description Provides detailed information about an API call.                The information on this record was captured by AvaTax when your API call was made.  If you are unsure why you  received an error, you can fetch these audit objects and examine the &#x60;RequestUrl&#x60;, &#x60;RequestBody&#x60;, and &#x60;ErrorMessage&#x60;  fields to determine root cause for the error.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuditModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AuditModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'transaction_id' => 'int',
        'account_id' => 'int',
        'user_id' => 'int',
        'ip_address' => 'string',
        'machine_name' => 'string',
        'client_name' => 'string',
        'client_version' => 'string',
        'adapter_name' => 'string',
        'adapter_version' => 'string',
        'server_name' => 'string',
        'server_version' => 'string',
        'reference_id' => 'int',
        'severity_level_id' => 'int',
        'server_timestamp' => '\DateTime',
        'server_duration' => 'int',
        'service_name' => 'string',
        'operation' => 'string',
        'reference_code' => 'string',
        'error_message' => 'string',
        'audit_message' => 'string',
        'load_balancer_duration' => 'int',
        'record_count' => 'int',
        'reference_authorization' => 'string',
        'is_queued' => 'bool',
        'database_call_count' => 'int',
        'database_call_duration' => 'string',
        'remote_call_duration' => 'string',
        'events' => '\Swagger\Client\Model\AuditEvent[]',
        'request_url' => 'string',
        'request_body' => 'string',
        'response_status' => 'int',
        'response_body' => 'string',
        'remote_calls' => '\Swagger\Client\Model\AuditModel[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'transaction_id' => 'int64',
        'account_id' => 'int32',
        'user_id' => 'int32',
        'ip_address' => null,
        'machine_name' => null,
        'client_name' => null,
        'client_version' => null,
        'adapter_name' => null,
        'adapter_version' => null,
        'server_name' => null,
        'server_version' => null,
        'reference_id' => 'int64',
        'severity_level_id' => 'int32',
        'server_timestamp' => 'date-time',
        'server_duration' => 'int32',
        'service_name' => null,
        'operation' => null,
        'reference_code' => null,
        'error_message' => null,
        'audit_message' => null,
        'load_balancer_duration' => 'int32',
        'record_count' => 'int32',
        'reference_authorization' => null,
        'is_queued' => null,
        'database_call_count' => 'int32',
        'database_call_duration' => null,
        'remote_call_duration' => null,
        'events' => null,
        'request_url' => null,
        'request_body' => null,
        'response_status' => 'int32',
        'response_body' => null,
        'remote_calls' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'transaction_id' => 'transactionId',
        'account_id' => 'accountId',
        'user_id' => 'userId',
        'ip_address' => 'ipAddress',
        'machine_name' => 'machineName',
        'client_name' => 'clientName',
        'client_version' => 'clientVersion',
        'adapter_name' => 'adapterName',
        'adapter_version' => 'adapterVersion',
        'server_name' => 'serverName',
        'server_version' => 'serverVersion',
        'reference_id' => 'referenceId',
        'severity_level_id' => 'severityLevelId',
        'server_timestamp' => 'serverTimestamp',
        'server_duration' => 'serverDuration',
        'service_name' => 'serviceName',
        'operation' => 'operation',
        'reference_code' => 'referenceCode',
        'error_message' => 'errorMessage',
        'audit_message' => 'auditMessage',
        'load_balancer_duration' => 'loadBalancerDuration',
        'record_count' => 'recordCount',
        'reference_authorization' => 'referenceAuthorization',
        'is_queued' => 'isQueued',
        'database_call_count' => 'databaseCallCount',
        'database_call_duration' => 'databaseCallDuration',
        'remote_call_duration' => 'remoteCallDuration',
        'events' => 'events',
        'request_url' => 'requestUrl',
        'request_body' => 'requestBody',
        'response_status' => 'responseStatus',
        'response_body' => 'responseBody',
        'remote_calls' => 'remoteCalls'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'transaction_id' => 'setTransactionId',
        'account_id' => 'setAccountId',
        'user_id' => 'setUserId',
        'ip_address' => 'setIpAddress',
        'machine_name' => 'setMachineName',
        'client_name' => 'setClientName',
        'client_version' => 'setClientVersion',
        'adapter_name' => 'setAdapterName',
        'adapter_version' => 'setAdapterVersion',
        'server_name' => 'setServerName',
        'server_version' => 'setServerVersion',
        'reference_id' => 'setReferenceId',
        'severity_level_id' => 'setSeverityLevelId',
        'server_timestamp' => 'setServerTimestamp',
        'server_duration' => 'setServerDuration',
        'service_name' => 'setServiceName',
        'operation' => 'setOperation',
        'reference_code' => 'setReferenceCode',
        'error_message' => 'setErrorMessage',
        'audit_message' => 'setAuditMessage',
        'load_balancer_duration' => 'setLoadBalancerDuration',
        'record_count' => 'setRecordCount',
        'reference_authorization' => 'setReferenceAuthorization',
        'is_queued' => 'setIsQueued',
        'database_call_count' => 'setDatabaseCallCount',
        'database_call_duration' => 'setDatabaseCallDuration',
        'remote_call_duration' => 'setRemoteCallDuration',
        'events' => 'setEvents',
        'request_url' => 'setRequestUrl',
        'request_body' => 'setRequestBody',
        'response_status' => 'setResponseStatus',
        'response_body' => 'setResponseBody',
        'remote_calls' => 'setRemoteCalls'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'transaction_id' => 'getTransactionId',
        'account_id' => 'getAccountId',
        'user_id' => 'getUserId',
        'ip_address' => 'getIpAddress',
        'machine_name' => 'getMachineName',
        'client_name' => 'getClientName',
        'client_version' => 'getClientVersion',
        'adapter_name' => 'getAdapterName',
        'adapter_version' => 'getAdapterVersion',
        'server_name' => 'getServerName',
        'server_version' => 'getServerVersion',
        'reference_id' => 'getReferenceId',
        'severity_level_id' => 'getSeverityLevelId',
        'server_timestamp' => 'getServerTimestamp',
        'server_duration' => 'getServerDuration',
        'service_name' => 'getServiceName',
        'operation' => 'getOperation',
        'reference_code' => 'getReferenceCode',
        'error_message' => 'getErrorMessage',
        'audit_message' => 'getAuditMessage',
        'load_balancer_duration' => 'getLoadBalancerDuration',
        'record_count' => 'getRecordCount',
        'reference_authorization' => 'getReferenceAuthorization',
        'is_queued' => 'getIsQueued',
        'database_call_count' => 'getDatabaseCallCount',
        'database_call_duration' => 'getDatabaseCallDuration',
        'remote_call_duration' => 'getRemoteCallDuration',
        'events' => 'getEvents',
        'request_url' => 'getRequestUrl',
        'request_body' => 'getRequestBody',
        'response_status' => 'getResponseStatus',
        'response_body' => 'getResponseBody',
        'remote_calls' => 'getRemoteCalls'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['transaction_id'] = isset($data['transaction_id']) ? $data['transaction_id'] : null;
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['user_id'] = isset($data['user_id']) ? $data['user_id'] : null;
        $this->container['ip_address'] = isset($data['ip_address']) ? $data['ip_address'] : null;
        $this->container['machine_name'] = isset($data['machine_name']) ? $data['machine_name'] : null;
        $this->container['client_name'] = isset($data['client_name']) ? $data['client_name'] : null;
        $this->container['client_version'] = isset($data['client_version']) ? $data['client_version'] : null;
        $this->container['adapter_name'] = isset($data['adapter_name']) ? $data['adapter_name'] : null;
        $this->container['adapter_version'] = isset($data['adapter_version']) ? $data['adapter_version'] : null;
        $this->container['server_name'] = isset($data['server_name']) ? $data['server_name'] : null;
        $this->container['server_version'] = isset($data['server_version']) ? $data['server_version'] : null;
        $this->container['reference_id'] = isset($data['reference_id']) ? $data['reference_id'] : null;
        $this->container['severity_level_id'] = isset($data['severity_level_id']) ? $data['severity_level_id'] : null;
        $this->container['server_timestamp'] = isset($data['server_timestamp']) ? $data['server_timestamp'] : null;
        $this->container['server_duration'] = isset($data['server_duration']) ? $data['server_duration'] : null;
        $this->container['service_name'] = isset($data['service_name']) ? $data['service_name'] : null;
        $this->container['operation'] = isset($data['operation']) ? $data['operation'] : null;
        $this->container['reference_code'] = isset($data['reference_code']) ? $data['reference_code'] : null;
        $this->container['error_message'] = isset($data['error_message']) ? $data['error_message'] : null;
        $this->container['audit_message'] = isset($data['audit_message']) ? $data['audit_message'] : null;
        $this->container['load_balancer_duration'] = isset($data['load_balancer_duration']) ? $data['load_balancer_duration'] : null;
        $this->container['record_count'] = isset($data['record_count']) ? $data['record_count'] : null;
        $this->container['reference_authorization'] = isset($data['reference_authorization']) ? $data['reference_authorization'] : null;
        $this->container['is_queued'] = isset($data['is_queued']) ? $data['is_queued'] : null;
        $this->container['database_call_count'] = isset($data['database_call_count']) ? $data['database_call_count'] : null;
        $this->container['database_call_duration'] = isset($data['database_call_duration']) ? $data['database_call_duration'] : null;
        $this->container['remote_call_duration'] = isset($data['remote_call_duration']) ? $data['remote_call_duration'] : null;
        $this->container['events'] = isset($data['events']) ? $data['events'] : null;
        $this->container['request_url'] = isset($data['request_url']) ? $data['request_url'] : null;
        $this->container['request_body'] = isset($data['request_body']) ? $data['request_body'] : null;
        $this->container['response_status'] = isset($data['response_status']) ? $data['response_status'] : null;
        $this->container['response_body'] = isset($data['response_body']) ? $data['response_body'] : null;
        $this->container['remote_calls'] = isset($data['remote_calls']) ? $data['remote_calls'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets transaction_id
     *
     * @return int
     */
    public function getTransactionId()
    {
        return $this->container['transaction_id'];
    }

    /**
     * Sets transaction_id
     *
     * @param int $transaction_id A unique ID number referring to this individual API call.
     *
     * @return $this
     */
    public function setTransactionId($transaction_id)
    {
        $this->container['transaction_id'] = $transaction_id;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return int
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int $account_id The unique ID number of the account to which the user belongs.
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return int
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param int $user_id The unique ID number of the user that performed this API call.
     *
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets ip_address
     *
     * @return string
     */
    public function getIpAddress()
    {
        return $this->container['ip_address'];
    }

    /**
     * Sets ip_address
     *
     * @param string $ip_address The origin IP address from which AvaTax received this API call.  If you use a proxy layer or other  gateway, this IP address may be the address of the gateway.  This information is not guaranteed  to be accurate and may change based on network conditions between your site and AvaTax.
     *
     * @return $this
     */
    public function setIpAddress($ip_address)
    {
        $this->container['ip_address'] = $ip_address;

        return $this;
    }

    /**
     * Gets machine_name
     *
     * @return string
     */
    public function getMachineName()
    {
        return $this->container['machine_name'];
    }

    /**
     * Sets machine_name
     *
     * @param string $machine_name If your API call specified a `MachineName` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this  variable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.
     *
     * @return $this
     */
    public function setMachineName($machine_name)
    {
        $this->container['machine_name'] = $machine_name;

        return $this;
    }

    /**
     * Gets client_name
     *
     * @return string
     */
    public function getClientName()
    {
        return $this->container['client_name'];
    }

    /**
     * Sets client_name
     *
     * @param string $client_name If your API call specified a `ClientName` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this  variable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.
     *
     * @return $this
     */
    public function setClientName($client_name)
    {
        $this->container['client_name'] = $client_name;

        return $this;
    }

    /**
     * Gets client_version
     *
     * @return string
     */
    public function getClientVersion()
    {
        return $this->container['client_version'];
    }

    /**
     * Sets client_version
     *
     * @param string $client_version If your API call specified a `ClientVersion` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this  variable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.
     *
     * @return $this
     */
    public function setClientVersion($client_version)
    {
        $this->container['client_version'] = $client_version;

        return $this;
    }

    /**
     * Gets adapter_name
     *
     * @return string
     */
    public function getAdapterName()
    {
        return $this->container['adapter_name'];
    }

    /**
     * Sets adapter_name
     *
     * @param string $adapter_name If your API call specified a `AdapterName` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this  variable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.
     *
     * @return $this
     */
    public function setAdapterName($adapter_name)
    {
        $this->container['adapter_name'] = $adapter_name;

        return $this;
    }

    /**
     * Gets adapter_version
     *
     * @return string
     */
    public function getAdapterVersion()
    {
        return $this->container['adapter_version'];
    }

    /**
     * Sets adapter_version
     *
     * @param string $adapter_version If your API call specified a `AdapterVersion` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this  variable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.
     *
     * @return $this
     */
    public function setAdapterVersion($adapter_version)
    {
        $this->container['adapter_version'] = $adapter_version;

        return $this;
    }

    /**
     * Gets server_name
     *
     * @return string
     */
    public function getServerName()
    {
        return $this->container['server_name'];
    }

    /**
     * Sets server_name
     *
     * @param string $server_name The server name of the AvaTax server that responded to this API call.
     *
     * @return $this
     */
    public function setServerName($server_name)
    {
        $this->container['server_name'] = $server_name;

        return $this;
    }

    /**
     * Gets server_version
     *
     * @return string
     */
    public function getServerVersion()
    {
        return $this->container['server_version'];
    }

    /**
     * Sets server_version
     *
     * @param string $server_version The software version number of the currently deployed AvaTax API software on the server that responded to this API call.
     *
     * @return $this
     */
    public function setServerVersion($server_version)
    {
        $this->container['server_version'] = $server_version;

        return $this;
    }

    /**
     * Gets reference_id
     *
     * @return int
     */
    public function getReferenceId()
    {
        return $this->container['reference_id'];
    }

    /**
     * Sets reference_id
     *
     * @param int $reference_id A context-dependent reference ID for this API call.  This reference ID is not guaranteed to contain a specific value  and may be used differently by various API calls.
     *
     * @return $this
     */
    public function setReferenceId($reference_id)
    {
        $this->container['reference_id'] = $reference_id;

        return $this;
    }

    /**
     * Gets severity_level_id
     *
     * @return int
     */
    public function getSeverityLevelId()
    {
        return $this->container['severity_level_id'];
    }

    /**
     * Sets severity_level_id
     *
     * @param int $severity_level_id If the API contained a specific type of error code, this value would contain the unique ID number of the severity level  of the response returned to the client.
     *
     * @return $this
     */
    public function setSeverityLevelId($severity_level_id)
    {
        $this->container['severity_level_id'] = $severity_level_id;

        return $this;
    }

    /**
     * Gets server_timestamp
     *
     * @return \DateTime
     */
    public function getServerTimestamp()
    {
        return $this->container['server_timestamp'];
    }

    /**
     * Sets server_timestamp
     *
     * @param \DateTime $server_timestamp The server timestamp, in UTC, of the time when the server received this API call.
     *
     * @return $this
     */
    public function setServerTimestamp($server_timestamp)
    {
        $this->container['server_timestamp'] = $server_timestamp;

        return $this;
    }

    /**
     * Gets server_duration
     *
     * @return int
     */
    public function getServerDuration()
    {
        return $this->container['server_duration'];
    }

    /**
     * Sets server_duration
     *
     * @param int $server_duration The number of milliseconds that the AvaTax server took to respond to this API call.
     *
     * @return $this
     */
    public function setServerDuration($server_duration)
    {
        $this->container['server_duration'] = $server_duration;

        return $this;
    }

    /**
     * Gets service_name
     *
     * @return string
     */
    public function getServiceName()
    {
        return $this->container['service_name'];
    }

    /**
     * Sets service_name
     *
     * @param string $service_name The service name of the AvaTax API service that responded to this API call.
     *
     * @return $this
     */
    public function setServiceName($service_name)
    {
        $this->container['service_name'] = $service_name;

        return $this;
    }

    /**
     * Gets operation
     *
     * @return string
     */
    public function getOperation()
    {
        return $this->container['operation'];
    }

    /**
     * Sets operation
     *
     * @param string $operation The operation name of this API call.
     *
     * @return $this
     */
    public function setOperation($operation)
    {
        $this->container['operation'] = $operation;

        return $this;
    }

    /**
     * Gets reference_code
     *
     * @return string
     */
    public function getReferenceCode()
    {
        return $this->container['reference_code'];
    }

    /**
     * Sets reference_code
     *
     * @param string $reference_code A context-dependent reference code for this API call.  This reference code is not guaranteed to contain a specific value  and may be used differently by various API calls.
     *
     * @return $this
     */
    public function setReferenceCode($reference_code)
    {
        $this->container['reference_code'] = $reference_code;

        return $this;
    }

    /**
     * Gets error_message
     *
     * @return string
     */
    public function getErrorMessage()
    {
        return $this->container['error_message'];
    }

    /**
     * Sets error_message
     *
     * @param string $error_message If this API call reported an error, this contains the name of the error that was returned.  You can look up more  information about AvaTax error messages on the [AvaTax REST Error Page](https://developer.avalara.com/avatax/errors/).
     *
     * @return $this
     */
    public function setErrorMessage($error_message)
    {
        $this->container['error_message'] = $error_message;

        return $this;
    }

    /**
     * Gets audit_message
     *
     * @return string
     */
    public function getAuditMessage()
    {
        return $this->container['audit_message'];
    }

    /**
     * Sets audit_message
     *
     * @param string $audit_message Reserved for Avalara internal usage.
     *
     * @return $this
     */
    public function setAuditMessage($audit_message)
    {
        $this->container['audit_message'] = $audit_message;

        return $this;
    }

    /**
     * Gets load_balancer_duration
     *
     * @return int
     */
    public function getLoadBalancerDuration()
    {
        return $this->container['load_balancer_duration'];
    }

    /**
     * Sets load_balancer_duration
     *
     * @param int $load_balancer_duration Reserved for Avalara internal usage.
     *
     * @return $this
     */
    public function setLoadBalancerDuration($load_balancer_duration)
    {
        $this->container['load_balancer_duration'] = $load_balancer_duration;

        return $this;
    }

    /**
     * Gets record_count
     *
     * @return int
     */
    public function getRecordCount()
    {
        return $this->container['record_count'];
    }

    /**
     * Sets record_count
     *
     * @param int $record_count If this API call returned an array of information, this value contains the number of records returned.
     *
     * @return $this
     */
    public function setRecordCount($record_count)
    {
        $this->container['record_count'] = $record_count;

        return $this;
    }

    /**
     * Gets reference_authorization
     *
     * @return string
     */
    public function getReferenceAuthorization()
    {
        return $this->container['reference_authorization'];
    }

    /**
     * Sets reference_authorization
     *
     * @param string $reference_authorization Reserved for Avalara internal usage.
     *
     * @return $this
     */
    public function setReferenceAuthorization($reference_authorization)
    {
        $this->container['reference_authorization'] = $reference_authorization;

        return $this;
    }

    /**
     * Gets is_queued
     *
     * @return bool
     */
    public function getIsQueued()
    {
        return $this->container['is_queued'];
    }

    /**
     * Sets is_queued
     *
     * @param bool $is_queued Reserved for Avalara internal usage.
     *
     * @return $this
     */
    public function setIsQueued($is_queued)
    {
        $this->container['is_queued'] = $is_queued;

        return $this;
    }

    /**
     * Gets database_call_count
     *
     * @return int
     */
    public function getDatabaseCallCount()
    {
        return $this->container['database_call_count'];
    }

    /**
     * Sets database_call_count
     *
     * @param int $database_call_count If this API call included requests made to any of the AvaTax data layers, this contains the number of requests that were traced.                Please note that not all data layers support this measurement.
     *
     * @return $this
     */
    public function setDatabaseCallCount($database_call_count)
    {
        $this->container['database_call_count'] = $database_call_count;

        return $this;
    }

    /**
     * Gets database_call_duration
     *
     * @return string
     */
    public function getDatabaseCallDuration()
    {
        return $this->container['database_call_duration'];
    }

    /**
     * Sets database_call_duration
     *
     * @param string $database_call_duration If this API call included requests made to any of the AvaTax data layers, this contains the total duration time measured for all the requests.                Please note that not all data layers support this measurement.
     *
     * @return $this
     */
    public function setDatabaseCallDuration($database_call_duration)
    {
        $this->container['database_call_duration'] = $database_call_duration;

        return $this;
    }

    /**
     * Gets remote_call_duration
     *
     * @return string
     */
    public function getRemoteCallDuration()
    {
        return $this->container['remote_call_duration'];
    }

    /**
     * Sets remote_call_duration
     *
     * @param string $remote_call_duration If this API call included interoperation with other Avalara services, this contains the amount of time taken by those services.
     *
     * @return $this
     */
    public function setRemoteCallDuration($remote_call_duration)
    {
        $this->container['remote_call_duration'] = $remote_call_duration;

        return $this;
    }

    /**
     * Gets events
     *
     * @return \Swagger\Client\Model\AuditEvent[]
     */
    public function getEvents()
    {
        return $this->container['events'];
    }

    /**
     * Sets events
     *
     * @param \Swagger\Client\Model\AuditEvent[] $events Reserved for Avalara internal usage.
     *
     * @return $this
     */
    public function setEvents($events)
    {
        $this->container['events'] = $events;

        return $this;
    }

    /**
     * Gets request_url
     *
     * @return string
     */
    public function getRequestUrl()
    {
        return $this->container['request_url'];
    }

    /**
     * Sets request_url
     *
     * @param string $request_url The original request URL as provided by the client.
     *
     * @return $this
     */
    public function setRequestUrl($request_url)
    {
        $this->container['request_url'] = $request_url;

        return $this;
    }

    /**
     * Gets request_body
     *
     * @return string
     */
    public function getRequestBody()
    {
        return $this->container['request_body'];
    }

    /**
     * Sets request_body
     *
     * @param string $request_body If this request was an HTTP request that included a body such as a POST or a PUT, this will contain the request body sent by the client.                This request body is represented as a string, exactly as it was received from the client.  Regardless of whether the request was JSON,  Base64 encoded bytes, or a CSV file, this contains the exact contents of the request body.
     *
     * @return $this
     */
    public function setRequestBody($request_body)
    {
        $this->container['request_body'] = $request_body;

        return $this;
    }

    /**
     * Gets response_status
     *
     * @return int
     */
    public function getResponseStatus()
    {
        return $this->container['response_status'];
    }

    /**
     * Sets response_status
     *
     * @param int $response_status The HTTP response code that was sent by the server.
     *
     * @return $this
     */
    public function setResponseStatus($response_status)
    {
        $this->container['response_status'] = $response_status;

        return $this;
    }

    /**
     * Gets response_body
     *
     * @return string
     */
    public function getResponseBody()
    {
        return $this->container['response_body'];
    }

    /**
     * Sets response_body
     *
     * @param string $response_body The entire response body sent from the AvaTax server to the client.  This value is returned as a string regardless of whether the results  were JSON-formatted text, CSV files, or raw strings.
     *
     * @return $this
     */
    public function setResponseBody($response_body)
    {
        $this->container['response_body'] = $response_body;

        return $this;
    }

    /**
     * Gets remote_calls
     *
     * @return \Swagger\Client\Model\AuditModel[]
     */
    public function getRemoteCalls()
    {
        return $this->container['remote_calls'];
    }

    /**
     * Sets remote_calls
     *
     * @param \Swagger\Client\Model\AuditModel[] $remote_calls Reserved for Avalara internal usage.
     *
     * @return $this
     */
    public function setRemoteCalls($remote_calls)
    {
        $this->container['remote_calls'] = $remote_calls;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


