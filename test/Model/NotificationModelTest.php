<?php
/**
 * NotificationModelTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AvaTax API
 *
 * REST interface to Avalara's enterprise tax service, AvaTax.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * NotificationModelTest Class Doc Comment
 *
 * @category    Class
 * @description Represents a single notification.                A notification is a message from Avalara that may have relevance to your business.  You may want  to regularly review notifications and then dismiss them when you are certain that you have addressed  any relevant concerns raised by this notification.                An example of a notification would be a message about new software, or a change to AvaTax that may  affect you, or a potential issue with your company&#39;s tax profile.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class NotificationModelTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "NotificationModel"
     */
    public function testNotificationModel()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "account_id"
     */
    public function testPropertyAccountId()
    {
    }

    /**
     * Test attribute "company_id"
     */
    public function testPropertyCompanyId()
    {
    }

    /**
     * Test attribute "reference_object"
     */
    public function testPropertyReferenceObject()
    {
    }

    /**
     * Test attribute "reference_id"
     */
    public function testPropertyReferenceId()
    {
    }

    /**
     * Test attribute "severity_level_id"
     */
    public function testPropertySeverityLevelId()
    {
    }

    /**
     * Test attribute "category"
     */
    public function testPropertyCategory()
    {
    }

    /**
     * Test attribute "topic"
     */
    public function testPropertyTopic()
    {
    }

    /**
     * Test attribute "message"
     */
    public function testPropertyMessage()
    {
    }

    /**
     * Test attribute "needs_action"
     */
    public function testPropertyNeedsAction()
    {
    }

    /**
     * Test attribute "action_name"
     */
    public function testPropertyActionName()
    {
    }

    /**
     * Test attribute "action_link"
     */
    public function testPropertyActionLink()
    {
    }

    /**
     * Test attribute "action_due_date"
     */
    public function testPropertyActionDueDate()
    {
    }

    /**
     * Test attribute "dismissed"
     */
    public function testPropertyDismissed()
    {
    }

    /**
     * Test attribute "dismissed_by_user_id"
     */
    public function testPropertyDismissedByUserId()
    {
    }

    /**
     * Test attribute "dismissed_date"
     */
    public function testPropertyDismissedDate()
    {
    }

    /**
     * Test attribute "expire_date"
     */
    public function testPropertyExpireDate()
    {
    }

    /**
     * Test attribute "created_user_id"
     */
    public function testPropertyCreatedUserId()
    {
    }

    /**
     * Test attribute "created_date"
     */
    public function testPropertyCreatedDate()
    {
    }

    /**
     * Test attribute "modified_user_id"
     */
    public function testPropertyModifiedUserId()
    {
    }

    /**
     * Test attribute "modified_date"
     */
    public function testPropertyModifiedDate()
    {
    }
}
