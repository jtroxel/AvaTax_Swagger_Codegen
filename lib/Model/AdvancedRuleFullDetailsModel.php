<?php
/**
 * AdvancedRuleFullDetailsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AvaTax API
 *
 * REST interface to Avalara's enterprise tax service, AvaTax.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AdvancedRuleFullDetailsModel Class Doc Comment
 *
 * @category Class
 * @description Model for Advanced Rules when full details are requested
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AdvancedRuleFullDetailsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AdvancedRuleFullDetailsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'script' => 'string',
        'customer_data_validator_script' => 'string',
        'is_approved' => 'bool',
        'created_by' => 'string',
        'created_on' => 'string',
        'modified_by' => 'string',
        'modified_on' => 'string',
        'approved_by' => 'string',
        'is_system_rule' => 'bool',
        'is_visible_in_cup' => 'bool',
        'is_test' => 'bool',
        'customer_data_schema' => 'string',
        'version' => 'int',
        'accounts_visible_for' => 'int[]',
        'rule_id' => 'string',
        'name' => 'string',
        'description' => 'string',
        'ar_entitlement_required' => 'bool',
        'execution_position' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'script' => null,
        'customer_data_validator_script' => null,
        'is_approved' => null,
        'created_by' => null,
        'created_on' => null,
        'modified_by' => null,
        'modified_on' => null,
        'approved_by' => null,
        'is_system_rule' => null,
        'is_visible_in_cup' => null,
        'is_test' => null,
        'customer_data_schema' => null,
        'version' => 'int32',
        'accounts_visible_for' => 'int32',
        'rule_id' => null,
        'name' => null,
        'description' => null,
        'ar_entitlement_required' => null,
        'execution_position' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'script' => 'script',
        'customer_data_validator_script' => 'customerDataValidatorScript',
        'is_approved' => 'isApproved',
        'created_by' => 'createdBy',
        'created_on' => 'createdOn',
        'modified_by' => 'modifiedBy',
        'modified_on' => 'modifiedOn',
        'approved_by' => 'approvedBy',
        'is_system_rule' => 'isSystemRule',
        'is_visible_in_cup' => 'isVisibleInCUP',
        'is_test' => 'isTest',
        'customer_data_schema' => 'customerDataSchema',
        'version' => 'version',
        'accounts_visible_for' => 'accountsVisibleFor',
        'rule_id' => 'ruleId',
        'name' => 'name',
        'description' => 'description',
        'ar_entitlement_required' => 'arEntitlementRequired',
        'execution_position' => 'executionPosition'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'script' => 'setScript',
        'customer_data_validator_script' => 'setCustomerDataValidatorScript',
        'is_approved' => 'setIsApproved',
        'created_by' => 'setCreatedBy',
        'created_on' => 'setCreatedOn',
        'modified_by' => 'setModifiedBy',
        'modified_on' => 'setModifiedOn',
        'approved_by' => 'setApprovedBy',
        'is_system_rule' => 'setIsSystemRule',
        'is_visible_in_cup' => 'setIsVisibleInCup',
        'is_test' => 'setIsTest',
        'customer_data_schema' => 'setCustomerDataSchema',
        'version' => 'setVersion',
        'accounts_visible_for' => 'setAccountsVisibleFor',
        'rule_id' => 'setRuleId',
        'name' => 'setName',
        'description' => 'setDescription',
        'ar_entitlement_required' => 'setArEntitlementRequired',
        'execution_position' => 'setExecutionPosition'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'script' => 'getScript',
        'customer_data_validator_script' => 'getCustomerDataValidatorScript',
        'is_approved' => 'getIsApproved',
        'created_by' => 'getCreatedBy',
        'created_on' => 'getCreatedOn',
        'modified_by' => 'getModifiedBy',
        'modified_on' => 'getModifiedOn',
        'approved_by' => 'getApprovedBy',
        'is_system_rule' => 'getIsSystemRule',
        'is_visible_in_cup' => 'getIsVisibleInCup',
        'is_test' => 'getIsTest',
        'customer_data_schema' => 'getCustomerDataSchema',
        'version' => 'getVersion',
        'accounts_visible_for' => 'getAccountsVisibleFor',
        'rule_id' => 'getRuleId',
        'name' => 'getName',
        'description' => 'getDescription',
        'ar_entitlement_required' => 'getArEntitlementRequired',
        'execution_position' => 'getExecutionPosition'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['script'] = isset($data['script']) ? $data['script'] : null;
        $this->container['customer_data_validator_script'] = isset($data['customer_data_validator_script']) ? $data['customer_data_validator_script'] : null;
        $this->container['is_approved'] = isset($data['is_approved']) ? $data['is_approved'] : null;
        $this->container['created_by'] = isset($data['created_by']) ? $data['created_by'] : null;
        $this->container['created_on'] = isset($data['created_on']) ? $data['created_on'] : null;
        $this->container['modified_by'] = isset($data['modified_by']) ? $data['modified_by'] : null;
        $this->container['modified_on'] = isset($data['modified_on']) ? $data['modified_on'] : null;
        $this->container['approved_by'] = isset($data['approved_by']) ? $data['approved_by'] : null;
        $this->container['is_system_rule'] = isset($data['is_system_rule']) ? $data['is_system_rule'] : null;
        $this->container['is_visible_in_cup'] = isset($data['is_visible_in_cup']) ? $data['is_visible_in_cup'] : null;
        $this->container['is_test'] = isset($data['is_test']) ? $data['is_test'] : null;
        $this->container['customer_data_schema'] = isset($data['customer_data_schema']) ? $data['customer_data_schema'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['accounts_visible_for'] = isset($data['accounts_visible_for']) ? $data['accounts_visible_for'] : null;
        $this->container['rule_id'] = isset($data['rule_id']) ? $data['rule_id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['ar_entitlement_required'] = isset($data['ar_entitlement_required']) ? $data['ar_entitlement_required'] : null;
        $this->container['execution_position'] = isset($data['execution_position']) ? $data['execution_position'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['script'] === null) {
            $invalidProperties[] = "'script' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets script
     *
     * @return string
     */
    public function getScript()
    {
        return $this->container['script'];
    }

    /**
     * Sets script
     *
     * @param string $script The code script for the rule
     *
     * @return $this
     */
    public function setScript($script)
    {
        $this->container['script'] = $script;

        return $this;
    }

    /**
     * Gets customer_data_validator_script
     *
     * @return string
     */
    public function getCustomerDataValidatorScript()
    {
        return $this->container['customer_data_validator_script'];
    }

    /**
     * Sets customer_data_validator_script
     *
     * @param string $customer_data_validator_script Script run for validating customer data
     *
     * @return $this
     */
    public function setCustomerDataValidatorScript($customer_data_validator_script)
    {
        $this->container['customer_data_validator_script'] = $customer_data_validator_script;

        return $this;
    }

    /**
     * Gets is_approved
     *
     * @return bool
     */
    public function getIsApproved()
    {
        return $this->container['is_approved'];
    }

    /**
     * Sets is_approved
     *
     * @param bool $is_approved Has the rule been approved
     *
     * @return $this
     */
    public function setIsApproved($is_approved)
    {
        $this->container['is_approved'] = $is_approved;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return string
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param string $created_by Creator of the rule
     *
     * @return $this
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets created_on
     *
     * @return string
     */
    public function getCreatedOn()
    {
        return $this->container['created_on'];
    }

    /**
     * Sets created_on
     *
     * @param string $created_on When the rule was created
     *
     * @return $this
     */
    public function setCreatedOn($created_on)
    {
        $this->container['created_on'] = $created_on;

        return $this;
    }

    /**
     * Gets modified_by
     *
     * @return string
     */
    public function getModifiedBy()
    {
        return $this->container['modified_by'];
    }

    /**
     * Sets modified_by
     *
     * @param string $modified_by Last updater of the rule
     *
     * @return $this
     */
    public function setModifiedBy($modified_by)
    {
        $this->container['modified_by'] = $modified_by;

        return $this;
    }

    /**
     * Gets modified_on
     *
     * @return string
     */
    public function getModifiedOn()
    {
        return $this->container['modified_on'];
    }

    /**
     * Sets modified_on
     *
     * @param string $modified_on When the rule was last updated
     *
     * @return $this
     */
    public function setModifiedOn($modified_on)
    {
        $this->container['modified_on'] = $modified_on;

        return $this;
    }

    /**
     * Gets approved_by
     *
     * @return string
     */
    public function getApprovedBy()
    {
        return $this->container['approved_by'];
    }

    /**
     * Sets approved_by
     *
     * @param string $approved_by Approver of the rule
     *
     * @return $this
     */
    public function setApprovedBy($approved_by)
    {
        $this->container['approved_by'] = $approved_by;

        return $this;
    }

    /**
     * Gets is_system_rule
     *
     * @return bool
     */
    public function getIsSystemRule()
    {
        return $this->container['is_system_rule'];
    }

    /**
     * Sets is_system_rule
     *
     * @param bool $is_system_rule Is this a system rule as opposed to customer-facing
     *
     * @return $this
     */
    public function setIsSystemRule($is_system_rule)
    {
        $this->container['is_system_rule'] = $is_system_rule;

        return $this;
    }

    /**
     * Gets is_visible_in_cup
     *
     * @return bool
     */
    public function getIsVisibleInCup()
    {
        return $this->container['is_visible_in_cup'];
    }

    /**
     * Sets is_visible_in_cup
     *
     * @param bool $is_visible_in_cup Is the rule displayed in the CUP UI
     *
     * @return $this
     */
    public function setIsVisibleInCup($is_visible_in_cup)
    {
        $this->container['is_visible_in_cup'] = $is_visible_in_cup;

        return $this;
    }

    /**
     * Gets is_test
     *
     * @return bool
     */
    public function getIsTest()
    {
        return $this->container['is_test'];
    }

    /**
     * Sets is_test
     *
     * @param bool $is_test Is this a rule created for testing
     *
     * @return $this
     */
    public function setIsTest($is_test)
    {
        $this->container['is_test'] = $is_test;

        return $this;
    }

    /**
     * Gets customer_data_schema
     *
     * @return string
     */
    public function getCustomerDataSchema()
    {
        return $this->container['customer_data_schema'];
    }

    /**
     * Sets customer_data_schema
     *
     * @param string $customer_data_schema The JSON schema for customer data if it is required for the rule
     *
     * @return $this
     */
    public function setCustomerDataSchema($customer_data_schema)
    {
        $this->container['customer_data_schema'] = $customer_data_schema;

        return $this;
    }

    /**
     * Gets version
     *
     * @return int
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param int $version The version of the rule
     *
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets accounts_visible_for
     *
     * @return int[]
     */
    public function getAccountsVisibleFor()
    {
        return $this->container['accounts_visible_for'];
    }

    /**
     * Sets accounts_visible_for
     *
     * @param int[] $accounts_visible_for Account Ids the rule is visible for in CUP, when IsVisibleInCUP = false
     *
     * @return $this
     */
    public function setAccountsVisibleFor($accounts_visible_for)
    {
        $this->container['accounts_visible_for'] = $accounts_visible_for;

        return $this;
    }

    /**
     * Gets rule_id
     *
     * @return string
     */
    public function getRuleId()
    {
        return $this->container['rule_id'];
    }

    /**
     * Sets rule_id
     *
     * @param string $rule_id Unique identifier for a rule
     *
     * @return $this
     */
    public function setRuleId($rule_id)
    {
        $this->container['rule_id'] = $rule_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Rule name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description Description of the rule
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets ar_entitlement_required
     *
     * @return bool
     */
    public function getArEntitlementRequired()
    {
        return $this->container['ar_entitlement_required'];
    }

    /**
     * Sets ar_entitlement_required
     *
     * @param bool $ar_entitlement_required Advance Rules limited availability
     *
     * @return $this
     */
    public function setArEntitlementRequired($ar_entitlement_required)
    {
        $this->container['ar_entitlement_required'] = $ar_entitlement_required;

        return $this;
    }

    /**
     * Gets execution_position
     *
     * @return string
     */
    public function getExecutionPosition()
    {
        return $this->container['execution_position'];
    }

    /**
     * Sets execution_position
     *
     * @param string $execution_position Execution position. Both, Before or After
     *
     * @return $this
     */
    public function setExecutionPosition($execution_position)
    {
        $this->container['execution_position'] = $execution_position;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


